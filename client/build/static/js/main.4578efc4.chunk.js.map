{"version":3,"sources":["serviceWorker.js","store/reducers/index.js","store/configureStore.js","containers/App.js","components/Layout/CenteredContainer.js","components/UI/Buttons/FullWidthButton.js","components/Form/DynamicForm.js","components/Logo/Logo.js","components/NavBar/RightIconBtn.js","components/NavBar/NavBar.js","pages/Register.js","pages/Login.js","components/UI/Buttons/LargeRoundedButton.js","components/UI/OrSeperator.js","pages/Home.js","pages/PageNotFound.js","pages/JoinConference.js","pages/HostConference.js","pages/Dashboard.js","pages/Profile.js","routes/index.js","index.js"],"names":["Boolean","window","location","hostname","match","rootReducer","combineReducers","todos","state","action","type","concat","text","configureStore","createStore","App","props","children","Container","styled","div","CenteredContainer","Button","button","FullWidthButton","onClick","FormHeading","h1","LinkText","Link","Para","p","Message","success","Input","input","FormContainer","DynamicForm","content","message","heading","fields","map","field","placeholder","name","key","value","formData","onChange","change","submit","footer","to","link","path","LogoLink","LogoText","size","Logo","BtnContainer","IconContainer","span","TextContainer","RightIconBtn","NavContainer","Nav","NavBar","UserProfile","expiryDate","localStorage","getItem","token","Date","displayName","Register","useState","email","password","confirmPassword","form","setState","e","target","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","res","status","Error","json","resData","history","push","catch","err","Login","setMessage","useEffect","search","URLSearchParams","get","userId","data","split","getTime","setItem","toISOString","LargeRoundedButton","Seperator","OrSeperator","PartedDiv","HomePage","navigate","route","style","marginTop","PageNotFound","color","Component","JoinConference","reqId","params","id","conferenceId","api","postData","open","url","Dashboard","Profile","removeItem","component","exact","RegisterPage","LoginPage","HostConference","store","ReactDOM","render","browserHistory","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4578efc4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nconst todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return state.concat([action.text])\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    todos\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst configureStore = () => {\r\n    return {\r\n        ...createStore(rootReducer)\r\n    }\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst App = (props) => {\n    return (\n      <div>\n        {props.children}\n      </div>\n    );\n}\n\n\nApp.propTypes = {\n  children: PropTypes.object.isRequired\n}\n\nexport default App;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    background-color: #3d3d3d;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\n\r\nfunction CenteredContainer(props) {\r\n    return (\r\n        <Container>\r\n            <div>\r\n            {props.children}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CenteredContainer\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n        outline: none;\r\n        background-color: #3d3d3d;\r\n        color: white;\r\n        font-size: 35px;\r\n        border-radius: 50px;\r\n        border: 1px solid white;\r\n        height: 71px;\r\n        width: 100%;\r\n        font-weight: 400;\r\n        display: block;\r\n        margin-top: 3%;\r\n        &:hover {\r\n            background-color: white;\r\n            color: #3d3d3d;\r\n        }\r\n    `;\r\n\r\nconst FullWidthButton = props => {\r\n\r\n    return (\r\n        <Button onClick={props.onClick}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nexport default FullWidthButton;","import React  from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FullWidthButton from \"../UI/Buttons/FullWidthButton\";\r\nimport { Link } from \"react-router\";\r\n\r\nconst FormHeading = styled.h1`\r\n  font-size: 45px;\r\n  color: white;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst LinkText = styled(Link)`\r\n  color: skyblue;\r\n  text-decoration: none;\r\n`;\r\nconst Para = styled.p`\r\n  font-size: 30px;\r\n  color: white;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  color: ${props => props.success?\"lightgreen\":\"tomato\"};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: none;\r\n  background-color: #3d3d3d;\r\n  color: white;\r\n  font-size: 35px;\r\n  border-radius: 50px;\r\n  border: 1px solid white;\r\n  height: 80px;\r\n  width: 536px;\r\n  font-weight: 400;\r\n  display: block;\r\n  margin-top: 3%;\r\n  padding: 2px 30px 2px 30px;\r\n  text-align: center;\r\n`;\r\n\r\n/*\r\ncontent ={\r\n    heading: \"\",\r\n    footer: \"\",\r\n    Link: {\r\n      path: \"\",\r\n      text: \"\"\r\n    }\r\n    fields: [{\r\n      placeholder:\"\",\r\n      name:\"\",\r\n      type:\"\"\r\n    }],\r\n    button: \"\"\r\n}\r\n*/\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst DynamicForm = (props) => {\r\n  const content = props.content;\r\n  let message = null;\r\n  if(props.message){\r\n    message = <Message success={props.message === 'User Created Successfully !'}>{props.message}</Message>;\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <FormHeading>{content.heading}</FormHeading>\r\n      {message}\r\n      <form>\r\n        {content.fields.map((field) => {\r\n          return (\r\n            <Input\r\n              type={field.type}\r\n              placeholder={field.placeholder}\r\n              name={field.name}\r\n              key={field.name}\r\n              value={props.formData[field.name]}\r\n              onChange={props.change}\r\n            />\r\n          );\r\n        })}\r\n        <FullWidthButton onClick={props.submit}>\r\n          {content.button}\r\n        </FullWidthButton>\r\n      </form>\r\n      <Para>\r\n        {content.footer}\r\n        <LinkText to={content.link.path}> {content.link.text}</LinkText>\r\n      </Para>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router';\r\n\r\nconst LogoLink = styled(Link)`\r\n    text-decoration: none;\r\n\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst LogoText = styled.h1`\r\n  color: #f6f6f6;\r\n  font-size: ${(props) => (props.size ? props.size : 71)}px;\r\n  font-family: \"Pacifico\", cursive, sans-serif;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Logo = props => {\r\n    return (\r\n      <LogoLink to=\"/\" >\r\n        <LogoText size={props.size}>RemoteConference</LogoText>\r\n      </LogoLink>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Logo;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nconst BtnContainer = styled(Link)`\r\n  text-decoration: none;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconContainer = styled.span`\r\n  font-size: 35px;\r\n`;\r\n\r\nconst TextContainer = styled.span`\r\n  font-size: 18px;\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\n\r\nconst RightIconBtn = (props) => {\r\n    return (\r\n      <BtnContainer to={props.link}>\r\n        <TextContainer>{props.name}</TextContainer>\r\n        <IconContainer>\r\n          <FaRegUserCircle />\r\n        </IconContainer>\r\n      </BtnContainer>\r\n    );\r\n}\r\n\r\nexport default RightIconBtn;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\n\r\n// Components\r\nimport Logo from '../Logo/Logo';\r\nimport RightIconBtn from './RightIconBtn';\r\n\r\nconst NavContainer = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items center;\r\n    height: 78px;\r\n`;\r\n\r\nconst Nav = styled.div`\r\n  height: 78px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  min-width: 600px;\r\n`;\r\n\r\n\r\nconst NavBar = () => {\r\n    let isAuth;\r\n    let UserProfile = null;\r\n    const expiryDate = localStorage.getItem('expiryDate');\r\n    const token = localStorage.getItem('token');\r\n    if(!expiryDate || !token || new Date(expiryDate) <= new Date()){\r\n      isAuth = false;\r\n    }\r\n    else {\r\n      isAuth = true;\r\n      let displayName = localStorage.getItem('displayName'); \r\n      UserProfile = <RightIconBtn name={displayName} link=\"/profile\" />;\r\n    }\r\n    if(isAuth){\r\n    }\r\n    return (\r\n      <NavContainer>\r\n        <Nav>\r\n          <Logo size=\"35\" />\r\n          {UserProfile}\r\n        </Nav>\r\n      </NavContainer>\r\n    );\r\n}\r\n\r\nexport default NavBar\r\n","import React, { useState } from \"react\";\r\nimport { browserHistory as history } from \"react-router\";\r\nimport CenteredContainer from \"../components/Layout/CenteredContainer\";\r\nimport DynamicForm from \"../components/Form/DynamicForm\";\r\nimport NavBar from \"../components/NavBar/NavBar\";\r\n\r\nconst Register = () => {\r\n  const content = {\r\n    heading: \"Create a new Account\",\r\n    footer: \"Already have an Account?\",\r\n    link: {\r\n      path: \"/login\",\r\n      text: \"Login Here\",\r\n    },\r\n    button: \"SIGN UP\",\r\n    fields: [\r\n      {\r\n        name: \"email\",\r\n        type: \"email\",\r\n        placeholder: \"E-Mail\",\r\n      },\r\n      {\r\n        name: \"password\",\r\n        type: \"password\",\r\n        placeholder: \"Password\",\r\n      },\r\n      {\r\n        name: \"confirmPassword\",\r\n        type: \"password\",\r\n        placeholder: \"Confirm Password\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [form, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const changeHandler = (e) => {\r\n    setState({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(form);\r\n    fetch(\"/api/v1/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(form),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 422) {\r\n          throw new Error(\"Validation Error!\");\r\n        }\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Registration Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        history.push(\"/login?success=true\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer>\r\n      <NavBar />\r\n      <DynamicForm\r\n        content={content}\r\n        formData={form}\r\n        change={changeHandler}\r\n        submit={submitHandler}\r\n      />\r\n    </CenteredContainer>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { browserHistory as history } from \"react-router\";\r\nimport CenteredContainer from \"../components/Layout/CenteredContainer\";\r\nimport DynamicForm from \"../components/Form/DynamicForm\";\r\nimport NavBar from \"../components/NavBar/NavBar\";\r\n\r\nconst Login = () => {\r\n  const [message, setMessage] = useState(' ');\r\n  useEffect(() => {\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const isRedirected = params.get('success');\r\n    if(isRedirected){\r\n      setMessage('User Created Successfully !');\r\n    }\r\n  }, []);\r\n  const content = {\r\n    heading: \"Sign in to your Account\",\r\n    footer: \"Don't have an Account?\",\r\n    link: {\r\n      path: \"/register\",\r\n      text: \"Register\",\r\n    },\r\n    button: \"SIGN IN\",\r\n    fields: [\r\n      {\r\n        name: \"email\",\r\n        type: \"email\",\r\n        placeholder: \"E-Mail\",\r\n      },\r\n      {\r\n        name: \"password\",\r\n        type: \"password\",\r\n        placeholder: \"Password\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [form, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const changeHandler = (e) => {\r\n    setState({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(form);\r\n    fetch(\"api/v1/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(form),\r\n    })\r\n      .then((res) => { \r\n        console.log(res);\r\n        if(res.status === '422'){\r\n          setMessage('Validation Error !');\r\n          throw new Error('Validation Error!');\r\n        }\r\n        if(res.status !== 200 && res.status !== 201){\r\n          setMessage('Server Error !');\r\n          throw new Error('Server Error !');\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if(res.success){\r\n          const userId = res.data.userId;\r\n          const email = res.data.email;\r\n          const displayName = res.data.displayName;\r\n          const token = res.token.split(\" \")[1];\r\n\r\n          const remainingTime = 60 * 60 * 1000;\r\n          const expiryDate = new Date(new Date().getTime() + remainingTime);\r\n\r\n          console.log({userId, email, displayName, token});\r\n          localStorage.setItem('userId', userId);\r\n          localStorage.setItem('email', email);\r\n          localStorage.setItem('displayName', displayName);\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n          history.push('/dashboard');\r\n        }else{\r\n          setMessage(res.message);\r\n        }\r\n      })\r\n      .catch((err) => setMessage('Unable to reach server !'+err));\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer>\r\n      <NavBar />\r\n      <DynamicForm\r\n        content={content}\r\n        formData={form}\r\n        change={changeHandler}\r\n        submit={submitHandler}\r\n        message={message}\r\n      />\r\n    </CenteredContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n        outline: none;\r\n        background-color: #3d3d3d;\r\n        color: white;\r\n        font-size: 40px;\r\n        border-radius: 50px;\r\n        border: 1px solid white;\r\n        height: 140px;\r\n        width: 260px;\r\n        font-weight: 400;\r\n        &:hover {\r\n            background-color: white;\r\n            color: #3d3d3d;\r\n        }\r\n    `;\r\n\r\nconst LargeRoundedButton = props => {\r\n\r\n    return (\r\n        <Button onClick={props.onClick}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nexport default LargeRoundedButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Seperator = styled.div`\r\n    font-family: 'Pacifico', cursive, sans-serif;\r\n    font-size: 26px;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    &::before, &::after {\r\n        content: '';\r\n        flex: 1;\r\n        border-bottom: 1px solid #fff;\r\n    }\r\n    &::before {\r\n        margin-right: 0.4em;\r\n    }\r\n    &::after {\r\n        margin-left:  0.4em;\r\n    }\r\n`;\r\n\r\nconst OrSeperator = () => {\r\n    return (\r\n        <Seperator>\r\n            OR\r\n        </Seperator>\r\n    )\r\n}\r\n\r\nexport default OrSeperator\r\n","import React from 'react';\r\nimport { browserHistory as history  } from \"react-router\";\r\nimport styled from 'styled-components';\r\nimport CenteredContainer from '../components/Layout/CenteredContainer';\r\nimport Logo from '../components/Logo/Logo';\r\nimport LargeRoundedButton from '../components/UI/Buttons/LargeRoundedButton';\r\nimport OrSeperator from '../components/UI/OrSeperator';\r\nimport FullWidthButton from '../components/UI/Buttons/FullWidthButton';\r\n\r\n\r\nconst PartedDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\n\r\nconst HomePage = (props) => {\r\n\r\n    const navigate = (route) => {\r\n        history.push(route);\r\n    }\r\n    \r\n    return (\r\n      <CenteredContainer>\r\n        <Logo />\r\n        <PartedDiv style={{ marginTop: \"10%\" }}>\r\n          <LargeRoundedButton onClick={() => navigate(\"/join-conference\")}>\r\n            JOIN\r\n          </LargeRoundedButton>\r\n          <LargeRoundedButton onClick={() => navigate(\"/login\")}>\r\n            HOST\r\n          </LargeRoundedButton>\r\n        </PartedDiv>\r\n        <OrSeperator />\r\n        <FullWidthButton onClick={() => navigate(\"/login\")}>\r\n          SIGN IN\r\n        </FullWidthButton>\r\n        <FullWidthButton onClick={() => navigate(\"/register\")}>\r\n          SIGN UP\r\n        </FullWidthButton>\r\n      </CenteredContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport CenteredContainer from '../components/Layout/CenteredContainer';\r\nimport NavBar from '../components/NavBar/NavBar';\r\n\r\nclass PageNotFound extends Component{\r\n    render(){\r\n        return (\r\n          <CenteredContainer>\r\n              <NavBar />\r\n            <h1 style={{color: 'white'}}>Page Not Found :(</h1>\r\n          </CenteredContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageNotFound;","import React, { useState } from \"react\";\r\nimport CenteredContainer from \"../components/Layout/CenteredContainer\";\r\nimport DynamicForm from \"../components/Form/DynamicForm\";\r\nimport NavBar from \"../components/NavBar/NavBar\";\r\n\r\nconst JoinConference = (props) => {\r\n  let reqId = props.params.id;\r\n  const [message, setMessage] = useState('');  \r\n  const content = {\r\n    api: \"/sdf\",\r\n    heading: \"Join A Conference\",\r\n    footer: \"\",\r\n    link: {\r\n      path: \"\",\r\n      text: \"\",\r\n    },\r\n    button: \"JOIN\",\r\n    fields: [\r\n      {\r\n        name: \"displayName\",\r\n        type: \"text\",\r\n        placeholder: \"Display Name\",\r\n      },\r\n      {\r\n        name: \"conferenceId\",\r\n        type: \"text\",\r\n        placeholder: \"Enter Conference ID\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [form, setState] = useState({\r\n    displayName: \"\",\r\n    conferenceId: !reqId?\"\":reqId,\r\n  });\r\n\r\n  const changeHandler = (e) => {\r\n    setState({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(form.conferenceId === \"\"){\r\n      setMessage(\"Please Enter a valid conference ID\");\r\n    }\r\n    else if(form.displayName !== \"\"){\r\n      const userId = localStorage.getItem(\"userId\");\r\n      if(userId){\r\n        const postData = { ...form, userId };\r\n        fetch(\"/api/v1/user/change-display-name\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(postData),\r\n        })\r\n          .then((res) => {\r\n            console.log(res);\r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error(\"Server Error\");\r\n            }\r\n            return res.json();\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            if (res.success) {\r\n              setMessage(\"Display name changed !\");\r\n              setState({\r\n                displayName: \"\",\r\n              });\r\n              localStorage.setItem(\"displayName\", form.displayName);\r\n              window.open(`/conferences/${form.conferenceId}`, \"_self\");\r\n            }\r\n          })\r\n          .catch((err) => setMessage(\"Internal Server Error!.\" + err));\r\n      }\r\n      else {\r\n        localStorage.setItem('displayName', form.displayName);\r\n        window.open(`conferences/${form.conferenceId}`, \"_self\");\r\n      }\r\n      \r\n    }\r\n    else{\r\n        setMessage('Please enter a display name !');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer>\r\n      <NavBar />\r\n      <DynamicForm\r\n        content={content}\r\n        formData={form}\r\n        change={changeHandler}\r\n        submit={submitHandler}\r\n        message={message}\r\n      />\r\n    </CenteredContainer>\r\n  );\r\n};\r\n\r\nexport default JoinConference;\r\n","import React, { useState } from \"react\";\r\nimport CenteredContainer from \"../components/Layout/CenteredContainer\";\r\nimport DynamicForm from \"../components/Form/DynamicForm\";\r\nimport NavBar from \"../components/NavBar/NavBar\";\r\nimport { browserHistory as history } from \"react-router\";\r\n\r\nconst JoinConference = () => {\r\n  const content = {\r\n    api: \"/sdf\",\r\n    heading: \"Host A Conference\",\r\n    footer: \"\",\r\n    link: {\r\n      path: \"\",\r\n      text: \"\",\r\n    },\r\n    button: \"HOST\",\r\n    fields: [\r\n      {\r\n        name: \"displayName\",\r\n        type: \"text\",\r\n        placeholder: \"Display Name\",\r\n      },\r\n      {\r\n        name: \"password\",\r\n        type: \"password\",\r\n        placeholder: \"Enter Password (optional)\",\r\n      },\r\n    ],\r\n  };\r\n  const [message, setMessage] = useState('');\r\n  const [form, setState] = useState({\r\n    displayName: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const changeHandler = (e) => {\r\n    setState({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (form.displayName !== \"\") {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      const postData = { ...form, userId };\r\n      fetch(\"/api/v1/user/change-display-name\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(postData),\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status !== 200 && res.status !== 201) {\r\n            throw new Error(\"Server Error\");\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.success) {\r\n            setMessage(\"Display name changed !\");\r\n            setState({\r\n              displayName: \"\",\r\n            });\r\n            localStorage.setItem(\"displayName\", form.displayName);\r\n            window.open(`conferences/new-public`, \"_self\");\r\n          }\r\n        })\r\n        .catch((err) => setMessage(\"Internal Server Error!.\" + err));\r\n    } else {\r\n      window.open(`conferences/new-public`, \"_self\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer>\r\n      <NavBar />\r\n      <DynamicForm\r\n        content={content}\r\n        formData={form}\r\n        change={changeHandler}\r\n        submit={submitHandler}\r\n      />\r\n    </CenteredContainer>\r\n  );\r\n};\r\n\r\nexport default JoinConference;\r\n","import React from 'react';\r\nimport { browserHistory as history } from 'react-router'; \r\nimport CenteredContainer from '../components/Layout/CenteredContainer';\r\nimport NavBar from '../components/NavBar/NavBar';\r\nimport OrSeperator from '../components/UI/OrSeperator';\r\nimport FullWidthButton from '../components/UI/Buttons/FullWidthButton';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 536px;\r\n`;\r\n\r\nconst navigate = (url) => {\r\n  history.push(url);\r\n}\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n      <CenteredContainer>\r\n        <NavBar />\r\n        <Container>\r\n          <FullWidthButton onClick={() => navigate('/join-conference')}>JOIN</FullWidthButton>\r\n          <OrSeperator />\r\n          <FullWidthButton onClick={() => navigate('/host-conference')}>HOST</FullWidthButton>\r\n        </Container>\r\n      </CenteredContainer>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { browserHistory as history } from \"react-router\";\r\nimport CenteredContainer from \"../components/Layout/CenteredContainer\";\r\nimport DynamicForm from \"../components/Form/DynamicForm\";\r\nimport NavBar from \"../components/NavBar/NavBar\";\r\nimport OrSeperator from \"../components/UI/OrSeperator\";\r\nimport FullWidthButton from \"../components/UI/Buttons/FullWidthButton\";\r\n\r\nconst Profile = () => {\r\n  const content = {\r\n    heading: \"Set A Display Name\",\r\n    footer: \"\",\r\n    link: {\r\n      path: \"\",\r\n      text: \"\",\r\n    },\r\n    button: \"SET\",\r\n    fields: [\r\n      {\r\n        name: \"displayName\",\r\n        type: \"text\",\r\n        placeholder: \"Display Name\",\r\n      },\r\n    ],\r\n  };\r\n  const [message, setMessage] = useState('');\r\n  const [form, setState] = useState({\r\n    displayName: \"\",\r\n  });\r\n\r\n  const changeHandler = (e) => {\r\n    setState({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const userId = localStorage.getItem('userId');\r\n    const postData = {...form, userId};\r\n    fetch('/api/v1/user/change-display-name',{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(postData)\r\n    })\r\n    .then(res => {\r\n      console.log(res);\r\n      if(res.status !== 200 && res.status !== 201){\r\n        throw new Error('Server Error');\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(res => {\r\n      console.log(res);\r\n      if(res.success){\r\n        setMessage('Display name changed !');\r\n        setState({\r\n          displayName: \"\",\r\n        });\r\n        localStorage.setItem('displayName',form.displayName);\r\n        history.push('/profile');\r\n      }\r\n    })\r\n    .catch(err => setMessage('Internal Server Error!.'+err));\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('displayName');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiryDate');\r\n    history.push('/login');\r\n  }\r\n  return (\r\n    <CenteredContainer>\r\n      <NavBar />\r\n      <DynamicForm\r\n        content={content}\r\n        formData={form}\r\n        change={changeHandler}\r\n        submit={submitHandler}\r\n        message={message}\r\n      />\r\n      <OrSeperator />\r\n      <FullWidthButton onClick={logoutHandler} >LOG OUT</FullWidthButton>\r\n    </CenteredContainer>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Route, IndexRoute } from 'react-router';\r\n\r\n// Pages\r\nimport App from \"../containers/App\";\r\nimport RegisterPage from '../pages/Register';\r\nimport LoginPage from '../pages/Login';\r\nimport HomePage from '../pages/Home';\r\nimport PageNotFound from '../pages/PageNotFound';\r\nimport JoinConference from '../pages/JoinConference';\r\nimport HostConference from \"../pages/HostConference\";\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Profile from '../pages/Profile';\r\n\r\nexport default (\r\n  <Route path=\"/\" component={App}>\r\n    <IndexRoute component={HomePage} />\r\n    <Route path=\"\" exact component={HomePage} />\r\n    <Route path=\"register\" component={RegisterPage} />\r\n    <Route path=\"login\" component={LoginPage} />\r\n    <Route path=\"join-conference\" component={JoinConference} />\r\n    <Route path=\"join-conference/:id\" component={JoinConference} />\r\n    <Route path=\"host-conference\" component={HostConference} />\r\n    <Route path=\"dashboard\" component={Dashboard} />\r\n    <Route path=\"profile\" component={Profile} />\r\n    <Route path=\"*\" exact component={PageNotFound} />\r\n  </Route>\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, browserHistory } from 'react-router';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport routes from './routes';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={browserHistory} routes={routes} />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}